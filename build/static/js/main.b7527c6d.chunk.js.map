{"version":3,"sources":["services/apiConfig.ts","services/shows.service.ts","views/SearchView/components/SearchBar.tsx","theme.ts","shared/components/FavoriteButton.tsx","history.ts","views/SearchView/components/SearchResult.tsx","views/SearchView/index.tsx","shared/components/BackButton.tsx","views/DetailsView/index.tsx","views/NotFoundView/index.tsx","routes.tsx","shared/components/SlowInternetSnackbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["showApiBase","searchShowsByTerm","term","a","axios","get","API","getShowById","id","useStyles","makeStyles","root","width","textField","SearchBar","onInputChange","classes","useState","inputValue","setInputValue","useEffect","debounce","setTimeout","clearTimeout","data-testid","className","noValidate","autoComplete","TextField","placeholder","variant","onChange","event","target","value","InputProps","startAdornment","InputAdornment","position","Search","color","theme","palette","primary","secondary","background","lightGrey","darkGrey","newTheme","main","contrastText","overrides","MuiCheckbox","fill","styles","active","inactive","FavoriteButton","isFavorite","setIsFavorite","hideText","Button","onClick","style","Star","history","createBrowserHistory","display","marginTop","media","SearchResult","show","Card","CardMedia","component","alt","name","image","path","title","CardActionArea","push","CardContent","Typography","gutterBottom","CardActions","newVal","flexDirection","alignItems","SearchView","searchTerm","setSearchTerm","searchResultList","setSearchResultList","then","response","data","map","result","BackButton","onBackButtonClick","ChevronLeftSharp","maxHeight","chip","marginRight","content","favoriteButton","DetailsView","useParams","setShow","isEmpty","genres","genre","i","Chip","label","parse","summary","NotFoundView","Routes","exact","to","TransitionUp","props","Slide","direction","SlowInternetSnackbar","isOpen","setIsOpen","Snackbar","open","TransitionComponent","message","action","size","muiTheme","createMuiTheme","testNetworkSpeed","NetworkSpeed","checkDownloadSpeed","speed","App","isSlowInternetSnackbarOpen","setIsSlowInternetSnackbarOpen","getNetworkDownloadSpeed","parseFloat","kbps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7527c6d.chunk.js","sourcesContent":["export const showApiBase = 'http://api.tvmaze.com';\n","import axios, { AxiosResponse } from 'axios';\nimport { Show, ShowWrapper } from 'src/types';\nimport { showApiBase as API } from './apiConfig';\n\nexport const searchShowsByTerm = async (term: string): Promise<AxiosResponse<ShowWrapper[]>> => {\n  return axios.get<ShowWrapper[]>(`${API}/search/shows?q=${term}`);\n};\n\nexport const getShowById = async (id: string): Promise<AxiosResponse<Show>> => {\n  return axios.get<Show>(`${API}/shows/${id}`);\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { InputAdornment, makeStyles, TextField } from '@material-ui/core';\nimport { Search } from '@material-ui/icons';\n\nconst debounceTimeInMS = 2000;\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  textField: {\n    width: '100%',\n  },\n});\n\ninterface Props {\n  onInputChange: (val: string) => void;\n}\n\nconst SearchBar = ({ onInputChange }: Props) => {\n  const classes = useStyles();\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    const debounce = setTimeout(() => onInputChange(inputValue), debounceTimeInMS);\n    return () => {\n      clearTimeout(debounce);\n    };\n  }, [inputValue, onInputChange]);\n\n  return (\n    <div data-testid=\"search-bar\" className={classes.root}>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          id=\"outlined-basic\"\n          placeholder=\"Search...\"\n          variant=\"outlined\"\n          onChange={event => setInputValue(event.target.value)}\n          className={classes.textField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search color={'primary'} />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","const theme = {\n  palette: {\n    primary: '#39c69c',\n    secondary: '#666666',\n    background: '#ffffff',\n    lightGrey: '#ececec',\n    darkGrey: '#444444',\n  },\n};\n\nexport default theme;\n\nexport const newTheme = {\n  palette: {\n    primary: {\n      main: theme.palette.primary,\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: theme.palette.secondary,\n      contrastText: '#fff',\n    },\n  },\n  overrides: {\n    MuiCheckbox: {\n      root: {\n        '&$checked': {\n          color: `${theme.palette.primary} !important`,\n          fill: `${theme.palette.primary} !important`,\n        },\n      },\n    },\n  },\n};\n\nexport const activeColor = '#4e8ffe';\nexport const inactiveColor = '#888888';\n","import React from 'react';\nimport { Star } from '@material-ui/icons';\n\nimport { activeColor, inactiveColor } from 'src/theme';\nimport { Button } from '@material-ui/core';\n\nconst styles = {\n  active: {\n    color: activeColor,\n  },\n  inactive: {\n    color: inactiveColor,\n  },\n};\n\ninterface Props {\n  isFavorite: boolean;\n  setIsFavorite: (current: boolean) => void;\n  hideText?: boolean;\n}\n\nconst FavoriteButton = ({ isFavorite, setIsFavorite, hideText }: Props) => {\n  const handleToggleFavorite = () => setIsFavorite(!isFavorite);\n\n  return (\n    <Button\n      onClick={handleToggleFavorite}\n      data-testid=\"favorite-button\"\n      style={isFavorite ? styles.active : styles.inactive}\n    >\n      <Star />\n      {!hideText && <>{isFavorite ? 'Remove from favorites' : 'Add to favorites'}</>}\n    </Button>\n  );\n};\n\nexport default FavoriteButton;\n","import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;\n","import React from 'react';\nimport FavoriteButton from 'src/shared/components/FavoriteButton';\nimport { Show } from 'src/types';\n\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\n\nimport { path } from 'ramda';\nimport history from 'src/history';\n\ninterface Props {\n  show: Show;\n  isFavorite: boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    marginTop: '0.1rem',\n  },\n  media: {\n    width: '20%',\n  },\n});\n\nconst SearchResult = ({ show, isFavorite }: Props) => {\n  const classes = useStyles();\n\n  const setIsFavorite = (newVal: boolean) => {\n    isFavorite = newVal;\n  };\n\n  const handleOnClick = () => {\n    history.push(`/details/${show.id}`);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        component=\"img\"\n        alt={show.name}\n        image={path(['image', 'original'], show)}\n        title={show.name}\n      />\n      <CardActionArea onClick={handleOnClick}>\n        <CardContent>\n          <Typography gutterBottom component=\"p\">\n            {show.name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <FavoriteButton\n          isFavorite={isFavorite}\n          setIsFavorite={setIsFavorite}\n          hideText={true}\n        ></FavoriteButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default SearchResult;\n","import React, { useState, useEffect } from 'react';\nimport { searchShowsByTerm } from 'src/services/shows.service';\nimport SearchBar from './components/SearchBar';\n\nimport { ShowWrapper } from 'src/types';\nimport { AxiosResponse } from 'axios';\nimport SearchResult from './components/SearchResult';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '30rem',\n  },\n});\n\nconst SearchView = () => {\n  const classes = useStyles();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const [searchResultList, setSearchResultList] = useState([] as ShowWrapper[]);\n\n  useEffect(() => {\n    if (searchTerm) {\n      void searchShowsByTerm(searchTerm).then((response: AxiosResponse<ShowWrapper[]>) => {\n        setSearchResultList(response.data);\n      });\n    }\n  }, [searchTerm]);\n\n  return (\n    <div data-testid=\"search-view\" className={classes.root}>\n      <SearchBar onInputChange={setSearchTerm}></SearchBar>\n      <div data-testid=\"search-results\">\n        {searchResultList.map(result => {\n          const show = result.show;\n          return <SearchResult key={show.id} show={show} isFavorite={false} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchView;\n","import { Button } from '@material-ui/core';\nimport { ChevronLeftSharp } from '@material-ui/icons';\nimport React from 'react';\n\ninterface Props {\n  onBackButtonClick: () => void;\n}\n\nconst BackButton = ({ onBackButtonClick }: Props) => {\n  return (\n    <Button color={'primary'} onClick={onBackButtonClick}>\n      <ChevronLeftSharp />\n      Back\n    </Button>\n  );\n};\n\nexport default BackButton;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AxiosResponse } from 'axios';\nimport { path, isEmpty } from 'ramda';\nimport parse from 'html-react-parser';\nimport { Card, CardContent, CardMedia, makeStyles, Typography, Chip } from '@material-ui/core';\n\nimport history from 'src/history';\nimport { getShowById } from 'src/services/shows.service';\nimport { Show } from 'src/types';\nimport BackButton from 'src/shared/components/BackButton';\nimport FavoriteButton from 'src/shared/components/FavoriteButton';\n\ninterface DetailsViewParams {\n  id: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    marginTop: '0.1rem',\n    '@media (max-width: 425px)': {\n      flexDirection: 'column',\n    },\n  },\n  media: {\n    width: '40%',\n    '@media (max-width: 425px)': {\n      width: '100%',\n      maxHeight: '30rem',\n    },\n  },\n  chip: {\n    marginRight: '.3rem',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  favoriteButton: {\n    marginTop: '1rem',\n  },\n});\n\nconst DetailsView = () => {\n  const { id } = useParams<DetailsViewParams>();\n  const classes = useStyles();\n\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [show, setShow] = useState({} as Show);\n\n  useEffect(() => {\n    if (id) {\n      void getShowById(id).then((response: AxiosResponse<Show>) => {\n        setShow(response.data);\n      });\n    }\n  }, [id]);\n\n  const onBackButtonClick = () => {\n    history.push('/search');\n  };\n\n  return (\n    <div>\n      <BackButton onBackButtonClick={onBackButtonClick}></BackButton>\n      {!isEmpty(show) && (\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            component=\"img\"\n            alt={show.name}\n            image={path(['image', 'original'], show)}\n            title={show.name}\n          />\n          <div className={classes.content}>\n            <CardContent>\n              <Typography variant=\"h3\" component=\"h2\">\n                {show.name}\n              </Typography>\n              {show.genres.map((genre, i) => {\n                return <Chip key={i} label={genre} color={'primary'} className={classes.chip} />;\n              })}\n              <div className={classes.favoriteButton}>\n                <FavoriteButton\n                  isFavorite={isFavorite}\n                  setIsFavorite={setIsFavorite}\n                ></FavoriteButton>\n              </div>\n              {parse(show.summary)}\n            </CardContent>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default DetailsView;\n","import React from 'react';\n\nconst NotFoundView = () => {\n  return <div>Not Found</div>;\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport SearchView from './views/SearchView';\nimport DetailsView from './views/DetailsView';\nimport NotFoundView from './views/NotFoundView';\n\nimport history from './history';\n\nconst Routes = () => (\n  <Router history={history}>\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/search\" />\n      </Route>\n      <Route exact path=\"/search\">\n        <SearchView></SearchView>\n      </Route>\n      <Route path=\"/details/:id\" component={DetailsView} />\n      <Route path=\"/*\" component={NotFoundView} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import { Button, Slide, SlideProps, Snackbar } from '@material-ui/core';\nimport React from 'react';\nimport theme from 'src/theme';\n\ninterface Props {\n  isOpen: boolean;\n  setIsOpen: (val: boolean) => void;\n}\n\nconst TransitionUp = (props: SlideProps) => {\n  return <Slide {...props} direction=\"up\" />;\n};\n\nconst SlowInternetSnackbar = ({ isOpen, setIsOpen }: Props) => {\n  return (\n    <Snackbar\n      open={isOpen}\n      TransitionComponent={TransitionUp}\n      message={'Your internet is kinda slow :('}\n      action={\n        <Button\n          style={{ color: theme.palette.primary }}\n          size=\"small\"\n          onClick={() => setIsOpen(false)}\n        >\n          Close\n        </Button>\n      }\n    />\n  );\n};\n\nexport default SlowInternetSnackbar;\n","import React, { useState } from 'react';\nimport Router from './routes';\n\nimport { newTheme } from 'src/theme';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n\nimport NetworkSpeed from 'network-speed';\nimport SlowInternetSnackbar from './shared/components/SlowInternetSnackbar';\n\nconst muiTheme = createMuiTheme(newTheme);\n\nconst testNetworkSpeed = new NetworkSpeed();\n\nasync function getNetworkDownloadSpeed() {\n  const baseUrl = 'https://eu.httpbin.org/stream-bytes/500000';\n  const fileSizeInBytes = 500000;\n  const speed = await testNetworkSpeed.checkDownloadSpeed(baseUrl, fileSizeInBytes);\n  return speed;\n}\n\nconst App = () => {\n  const [isSlowInternetSnackbarOpen, setIsSlowInternetSnackbarOpen] = useState(false);\n\n  void getNetworkDownloadSpeed().then(response => {\n    setIsSlowInternetSnackbarOpen(parseFloat(response.kbps) < 6000);\n  });\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <div className=\"App\">\n        <SlowInternetSnackbar\n          isOpen={isSlowInternetSnackbarOpen}\n          setIsOpen={setIsSlowInternetSnackbarOpen}\n        ></SlowInternetSnackbar>\n        <Router />\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}